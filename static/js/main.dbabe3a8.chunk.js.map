{"version":3,"sources":["img/spinner.gif","components/Header/Header.js","components/common/Table/TagTable.js","components/common/Table/TableRow.js","components/common/Table/Table.js","components/RegionalsList/NationalAverage.js","components/RegionalsList/RegionalsItems.js","components/common/Spinner/Spinner.js","components/RegionalsList/RegionalsList.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Header","_ref","text","react_default","a","createElement","className","TagTable","tag","data","TableRow","Object","keys","map","key","i","Table","headerTable","id","hs","toString","NationalAverage","props","national","RegionalsItems","data1","slice","data2","length","Spinner","src","spinner","alt","style","width","margin","display","RegionalsList","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","_this2","axios","get","then","res","setState","regionals","Component","App","components_RegionalsList_RegionalsList","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.dbabe3a8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/spinner.4e8868cc.gif\";","import React from \"react\";\r\n\r\nexport default function Header({ text }) {\r\n\treturn (\r\n\t\t<div className=\"header\">\r\n\t\t\t<span className=\"align-header\">\r\n\t\t\t\t<h1>{text}</h1>\r\n\t\t\t</span>\r\n\t\t</div>\r\n\t);\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function TagTable({ tag, data }) {\r\n\tconst content = tag === \"th\" ? <th>{data}</th> : <td>{data}</td>;\r\n\r\n\treturn content;\r\n}\r\n","import React from \"react\";\r\n\r\nimport TagTable from \"./TagTable\";\r\n\r\nexport default function TableRow({ tag, data }) {\r\n\tlet content =\r\n\t\ttypeof data === \"object\" ? (\r\n\t\t\tObject.keys(data).map((key, i) => (\r\n\t\t\t\t<TagTable key={i} tag={tag} data={data[key]} />\r\n\t\t\t))\r\n\t\t) : (\r\n\t\t\t<TagTable tag={tag} data={data} />\r\n\t\t);\r\n\r\n\treturn content;\r\n}\r\n","import React from \"react\";\r\n\r\nimport TagTable from \"./TagTable\";\r\nimport TableRow from \"./TableRow\";\r\n\r\nexport default function Table({ headerTable, data, id }) {\r\n\treturn (\r\n\t\t<table id={id}>\r\n\t\t\t<thead>\r\n\t\t\t\t<tr>\r\n\t\t\t\t\t{headerTable.map((hs, i) => (\r\n\t\t\t\t\t\t<TagTable key={i.toString()} tag={\"th\"} data={hs} />\r\n\t\t\t\t\t))}\r\n\t\t\t\t</tr>\r\n\t\t\t</thead>\r\n\t\t\t<tbody>\r\n\t\t\t\t{data.map((data, i) => (\r\n\t\t\t\t\t<tr key={i.toString()}>\r\n\t\t\t\t\t\t<TableRow tag={\"td\"} data={data} />\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t))}\r\n\t\t\t</tbody>\r\n\t\t</table>\r\n\t);\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function NationalAverage(props) {\r\n\tconst { national } = props;\r\n\treturn (\r\n\t\t<div id=\"average-national\">\r\n\t\t\tMédia Nacional\r\n\t\t\t<span className=\"border-top\">{national}</span>\r\n\t\t</div>\r\n\t);\r\n}\r\n","import React from \"react\";\r\n\r\nimport Table from \"../common/Table/Table\";\r\nimport NationalAverage from \"./NationalAverage\";\r\n\r\nexport default function RegionalsItems({ data, national }) {\r\n\tconst data1 = data.slice(0, 14);\r\n\tconst data2 = data.slice(14, data.length);\r\n\r\n\treturn (\r\n\t\t<div className=\"RegionalsItems\">\r\n\t\t\t<div id=\"tables\">\r\n\t\t\t\t<Table\r\n\t\t\t\t\tid={\"students-senai1\"}\r\n\t\t\t\t\theaderTable={[\"Regional\", \"Média\"]}\r\n\t\t\t\t\tdata={data1}\r\n\t\t\t\t/>\r\n\t\t\t\t<Table\r\n\t\t\t\t\tid={\"students-senai2\"}\r\n\t\t\t\t\theaderTable={[\"Regional\", \"Média\"]}\r\n\t\t\t\t\tdata={data2}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div id=\"average-block\">\r\n\t\t\t\t<NationalAverage national={national} />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n","import React from \"react\";\r\nimport spinner from \"../../../img/spinner.gif\";\r\n\r\nexport default function Spinner() {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<img\r\n\t\t\t\tsrc={spinner}\r\n\t\t\t\talt=\"Loading...\"\r\n\t\t\t\tstyle={{ width: \"200px\", margin: \"auto\", display: \"block\" }}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n}\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nimport RegionalsItems from \"./RegionalsItems\";\r\nimport Spinner from \"../common/Spinner/Spinner\";\r\n\r\nclass RegionalsList extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tdata: []\r\n\t\t};\r\n\t}\r\n\r\n\tcomponentWillMount() {\r\n\t\taxios.get(\"data.json\").then(res => {\r\n\t\t\tconst data = res.data;\r\n\t\t\tthis.setState({ data });\r\n\t\t});\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t{this.state.data.length === 0 ? (\r\n\t\t\t\t\t<Spinner />\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<RegionalsItems\r\n\t\t\t\t\t\tnational={this.state.data.national}\r\n\t\t\t\t\t\tdata={this.state.data.regionals}\r\n\t\t\t\t\t/>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default RegionalsList;\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\n\nimport Header from \"./components/Header/Header\";\nimport RegionalsList from \"./components/RegionalsList/RegionalsList\";\n\nclass App extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<Header text={\"Relatório\"} />\n\t\t\t\t<RegionalsList />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}